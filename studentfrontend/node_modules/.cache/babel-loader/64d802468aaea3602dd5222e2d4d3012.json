{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ianma\\\\OneDrive\\\\Documents\\\\Code_Projects\\\\SpringBoot_Practice\\\\studentfrontend\\\\src\\\\components\\\\Student.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Container } from '@mui/system';\nimport { Paper, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicTextFields() {\n  _s();\n\n  const paperStyle = {\n    padding: '50px 20px',\n    width: 600,\n    margin: \"20px auto\"\n  };\n  const [name, setName] = React.useState('');\n  const [address, setAddress] = React.useState('');\n  const [students, setStudents] = React.useState([]);\n\n  const handleClick = e => {\n    e.preventDefault();\n    const student = {\n      name,\n      address\n    };\n    console.log(student);\n    fetch(\"http://localhost:8080/student/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(student)\n    }).then(() => {\n      console.log(\"New student added from webpage\");\n    });\n  };\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:8080/student/getAll\").then(res => res.json()).then(result => {\n      setStudents(result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"blue\"\n        },\n        children: \"Add New Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          '& > :not(style)': {\n            m: 1,\n            width: '25ch'\n          }\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Full Name\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Address\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicTextFields, \"BDrk7ypkooOy0pCvsFos6p23OfM=\");\n\n_c = BasicTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTextFields\");","map":{"version":3,"names":["React","Box","TextField","Container","Paper","Button","BasicTextFields","paperStyle","padding","width","margin","name","setName","useState","address","setAddress","students","setStudents","handleClick","e","preventDefault","student","console","log","fetch","method","headers","body","JSON","stringify","then","useEffect","res","json","result","color","m","target","value"],"sources":["C:/Users/ianma/OneDrive/Documents/Code_Projects/SpringBoot_Practice/studentfrontend/src/components/Student.js"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Container } from '@mui/system';\r\nimport { Paper, Button } from '@mui/material';\r\n\r\nexport default function BasicTextFields() {\r\n    const paperStyle = {padding: '50px 20px', width:600, margin:\"20px auto\"}\r\n    const[name,setName]=React.useState('')\r\n    const[address,setAddress]=React.useState('')\r\n    const[students,setStudents]=React.useState([])\r\n\r\n    const handleClick=(e)=>{\r\n        e.preventDefault()\r\n        const student={name,address}\r\n        console.log(student)\r\n        fetch(\"http://localhost:8080/student/add\",{\r\n        method:\"POST\",\r\n        headers:{\"Content-Type\":\"application/json\"},\r\n        body:JSON.stringify(student)\r\n    }).then(()=>{\r\n        console.log(\"New student added from webpage\")\r\n    })\r\n}\r\n\r\nReact.useEffect(()=>{\r\n    fetch(\"http://localhost:8080/student/getAll\")\r\n    .then(res=>res.json())\r\n    .then((result)=>{\r\n        setStudents(result);\r\n    }\r\n)},[])\r\n\r\n  return (\r\n    <Container>\r\n        <Paper elevation = {3} style={paperStyle}>\r\n            <h1 style={{color:\"blue\"}}>Add New Student</h1>\r\n    <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& > :not(style)': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n      <TextField id=\"outlined-basic\" label=\"Full Name\" variant=\"outlined\" fullWidth\r\n      value={name}\r\n      onChange={(e)=>setName(e.target.value)}/>\r\n      <TextField id=\"outlined-basic\" label=\"Address\" variant=\"outlined\" fullWidth\r\n      value={address}\r\n      onChange={(e)=>setAddress(e.target.value)}/>\r\n      <Button variant=\"contained\" onClick={handleClick}>Submit</Button>\r\n    </Box>\r\n    </Paper>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}